services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: survey_app
    ports:
      - "8000:8000"
    volumes:
      # Mount source code for development (excluding vendor, storage, bootstrap/cache)
      - ./:/var/www/html/
      # Preserve container-built dependencies and cache
      - /var/www/html/vendor
      - /var/www/html/node_modules
      - storage_data:/var/www/html/storage
      - bootstrap_cache:/var/www/html/bootstrap/cache
      # Mount logs for easy access
      - ./storage/logs:/var/www/html/storage/logs
    environment:
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=mysql
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - survey_network
  mysql:
      image: mysql:8.0
      container_name: survey_mysql
      restart: unless-stopped
      environment:
          MYSQL_DATABASE: ${DB_DATABASE}
          MYSQL_USER: ${DB_USERNAME}
          MYSQL_PASSWORD: ${DB_PASSWORD}
          MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      ports:
          - "3306:3306"
      volumes:
          - mysql_data:/var/lib/mysql
          - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      healthcheck:
          test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
          timeout: 10s
          retries: 3
      networks:
        - survey_network
volumes:
    mysql_data:
      driver: local
    storage_data:
      driver: local
    bootstrap_cache:
      driver: local

networks:
    survey_network:
        driver: bridge
